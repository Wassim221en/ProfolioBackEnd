# Generated by Django 5.2.6 on 2025-09-17 20:40

import django.core.validators
import recommendations.models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Recommendation',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('rating', models.PositiveSmallIntegerField(help_text='Rating from 1 to 5 stars', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('recommender_name', models.CharField(help_text='Full name of the person giving the recommendation', max_length=100)),
                ('recommender_title', models.CharField(help_text='Professional title of the recommender', max_length=150)),
                ('recommender_company', models.CharField(help_text='Company or organization of the recommender', max_length=100)),
                ('recommender_location', models.CharField(blank=True, help_text='Location of the recommender', max_length=100)),
                ('recommendation_text', models.TextField(help_text='The actual recommendation text')),
                ('relationship', models.CharField(help_text="Professional relationship (e.g., 'Direct Manager', 'Colleague', 'Client')", max_length=100)),
                ('project_context', models.CharField(blank=True, help_text='Context or project where the collaboration happened', max_length=200)),
                ('linkedin_url', models.URLField(blank=True, help_text='LinkedIn profile URL of the recommender', validators=[django.core.validators.URLValidator()])),
                ('email', models.EmailField(blank=True, help_text='Email address of the recommender', max_length=254)),
                ('recommender_image', models.ImageField(blank=True, help_text='Profile image of the recommender', null=True, upload_to=recommendations.models.recommendation_image_upload_to)),
                ('recommendation_date', models.DateField(help_text='Date when the recommendation was given')),
                ('is_featured', models.BooleanField(default=False, help_text='Whether this recommendation should be featured prominently')),
                ('is_public', models.BooleanField(default=True, help_text='Whether this recommendation is publicly visible')),
                ('display_order', models.PositiveIntegerField(default=0, help_text='Order for displaying recommendations (lower numbers first)')),
                ('skills_mentioned', models.JSONField(blank=True, default=list, help_text='List of skills mentioned in the recommendation')),
            ],
            options={
                'ordering': ['display_order', '-recommendation_date', '-created_at'],
                'indexes': [models.Index(fields=['is_public', 'is_featured'], name='recommendat_is_publ_90aae5_idx'), models.Index(fields=['recommendation_date'], name='recommendat_recomme_b411a0_idx'), models.Index(fields=['display_order'], name='recommendat_display_b7b4ca_idx'), models.Index(fields=['rating'], name='recommendat_rating_5a1876_idx')],
            },
        ),
    ]
